config.pkg.cache.glob = ion-auto-load-*.php
config.pkg.source.dir = source
config.pkg.builds.dir = builds
config.pkg.macros.dir = macros
config.pkg.archives.dir = archives
config.pkg.tests.dir = tests
config.pkg.dependencies.dir = vendor
config.pkg.development.dir = nbproject
config.pkg.documentation.dir = documentation/html

config.pkg.additional.dirs = assets

config.pkg.cmd = composer
config.pkg.cmd.version.check = version option --check=version --check-return --query=
config.pkg.cmd.version.get = version auto --print --release="" --clear-build
config.pkg.cmd.version.set = version auto --print --release="" --clear-build --build=
config.pkg.cmd.generate.documentation = documentation phpdoc --overwrite-output --ignore-ssl-certificate --input=${state.pkg.source.classes.dir},${state.pkg.source.interfaces.dir} --output=${config.pkg.documentation.dir}
config.pkg.cmd.generate.interfaces.classes = interfaces generate --filenames=*Interface.php,I*.php --overwrite "--input=source/classes/" "--strip-prefixes=T" "--ignore-prefixes=T[a-z]" "--strip-suffixes=Trait" -vvv
config.pkg.cmd.generate.interfaces.traits = interfaces generate --filenames=*Interface.php,I*.php --overwrite "--input=source/traits/" "--strip-prefixes=T" "--ignore-prefixes=T[a-z]" "--strip-suffixes=Trait" -vvv
config.pkg.builds.cmd = ./vendor/bin/php-trans-porter.bat

config.pkg.tests.cmd = ./vendor/bin/phpunit

config.auto-load-cache-pattern = ion-auto-load-*.php

config.pkg.devops.glob = ./bitbucket-pipelines.*.yml
config.pkg.devops.target.filename = ./bitbucket-pipelines.yml
config.pkg.devops.development.filename = ./vendor/ion/dev/source/devops/bitbucket-pipelines.yml
config.pkg.devops.staging.filename = ./vendor/ion/dev/source/devops/bitbucket-pipelines.yml
config.pkg.devops.release.filename = ./vendor/ion/dev/source/devops/bitbucket-pipelines.yml
config.pkg.devops.git.ignore.filename = ./vendor/ion/dev/source/devops/gitignore
config.pkg.placeholder.filename = ./vendor/ion/dev/source/ant/placeholder.txt



config.vcs.branches.master.name = master
config.vcs.branches.segments.release.prefix = release
config.vcs.branches.segments.staging.prefix = staging
config.vcs.branches.segments.seperator = /
config.pkg.builds.source.version = 7.2
config.pkg.builds.targets.versions = 5.6,7.0,7.1

config.vcs.cmd = git
config.vcs.cmd.branch.delete = branch -D
config.vcs.cmd.branch.create = branch
config.vcs.cmd.revert-file = checkout
config.vcs.cmd.branch.current.set = checkout
config.vcs.cmd.branch.current.get = rev-parse --abbrev-ref HEAD
config.vcs.cmd.tag.set = tag -m "Package update" -a
config.vcs.cmd.tag.get = describe --abbrev=0 --match
config.vcs.cmd.merge.from = merge -X theirs --no-commit
config.vcs.cmd.merge.continue = commit -m "Merge commit"
# merge -X theirs
config.vcs.cmd.commit = commit -m
config.vcs.cmd.push = push --follow-tags --set-upstream origin
config.vcs.cmd.pull = pull -s recursive -X ours
config.vcs.cmd.state = add .





